# Программирование на языке высокого уровня (Python).
# Задание №4.3.2. Вариант 5
#
# Выполнила: Гоморина А.В.
# Группа: ПИН-б-о-21-1
# E-mail: nastyagomorinalove@gmail.com


class Пицца:
    """Класс Пицца содержит общие атрибуты для пиццы.

    Дочерние классы будут их конкретизировать.
    """

    def __init__(self):
        """Конструктор класса.

        Инициализирует атрибуты пиццы (значения по умолчанию).
        """
        self.название = "Заготовка"
        self.цена = 0
        self.тесто = "тонкое"  # тонкое или пышное
        self.соус = "кечтуп"   # или другой
        self.начинка = []      # список начинок (по умолчанию - нет)



    def __str__(self):
        """Вернуть информацию о пицце: название, тесто, соус, начинка.

        Формат вывода:

        Пицца: Пепперони | Цена: 350.00 р.
        Тесто: тонкое Соус: томатный
        Начинка: пепперони, сыр моцарелла
        """
        return f"Пицца: {self.название} | Цена: {self.цена:.2f} р.\n" \
               f"Тесто: {self.тесто} Соус: {self.соус}\n" \
               f"Начинка: {', '.join(self.начинка)}"

    def подготовить(self):
        """Сообщить о процессе подготовки.

        Формат вывода:

        Начинаю готовить пиццу Пепперони
          - замешиваю тонкое тесто...
          - добавляю соус: томатный...
          - и, конечно: пепперони, сыр моцарелла...
        """
        print(f"Заказ поступил на выполнение...")

        for i, пицца in enumerate(self.заказанные_пиццы, start=1):
            print(f"{i}. {пицца.название}")
            print(f"Начинаю готовить пиццу {пицца.название}")
            print(f"  - замешиваю тонкое тесто...")
            print(f"  - добавляю соус: {пицца.соус}...")
            print(f"  - и, конечно: {', '.join(пицца.начинка)}...")
            # Добавленный формат вывода
            print(f"Готово!\n")

    def испечь(self):
        """Сообщить о процессе запекания пиццы.

        Формат вывода: произвольное сообщение.
        """
        return "Пицца запекается в печи."

    def нарезать(self):
        """Сообщить о процессе нарезки.

        Формат вывода: произвольное сообщение.
        """
        return "Пицца нарезается."

    def упаковать(self):
        """Сообщить о процессе упаковки.

        Формат вывода: произвольное сообщение.
        """
        return "Пицца упаковывается."


class ПиццаПепперони(Пицца):
    """Класс ПиццаПепперони дополняет класс Пицца."""

    def __init__(self):
        super().__init__()
        self.название = "Пепперони"
        self.цена = 350
        self.соус = "томатный"
        self.тесто = "тонкое"
        self.начинка = ["пепперони, сыр моцарелла"]


class ПиццаБарбекю(Пицца):
    """Класс ПиццаБарбекю дополняет класс Пицца."""

    def __init__(self):
        super().__init__()

        self.название = "Барбекю"
        self.цена = 450
        self.соус = "барбекю"
        self.тесто = "тонкое"
        self.начинка = ["бекон, ветчина, зелень, сыр моцарелла"]




class ПиццаДарыМоря(Пицца):
    """Класс ПиццаДарыМоря дополняет класс Пицца."""

    def __init__(self):
        # Вызываем конструктор родительского класса Пицца
        super().__init__()
        self.название = "Дары моря"
        self.цена = 550
        self.соус = "тар-тар"
        self.тесто = "пышное"
        self.начинка = ["кальмары, креветки, мидии, сыр моцарелла"]

